ITプロジェクト受注獲得のための提案・見積実践

１章　営業支援ビジネス・フロー
　　営業支援
　　営業に対して、SEまたはプロジェクトマネージャが行う支援
　　（１）営業支援ビジネス・フロー
　　　　　商談
　　　　　↓
　　　　　商談評価（チェックリスト）
　　　　　↓　　　　何を商談のポイントにするか
　　　　　↓　　　　会社の方針や営業戦略にあっているか
　　　　　↓
　　　　　応札するか？
　　　　　↓
　　　　　↓Y
　　　　　ヒヤリング実施
　　　　　↓
　　　←RFPあるか？RFP：提案依頼書
　　　　　↓Y
　　　　　内容確認
　　　　　↓
　　　　　RFPの評価
　　　　　↓
　　　　　提案活動審議（上司以外の第三者も検討）
　　　　　↓
　　　　　承認
　　　　　↓
　　　　　提案書・見積書作成
　　　　　↓
　　　　　見積承認
　　　　　↓
　　　　　客先提出
　　　　　
　　　　　※見積承認のための公式ルール
　　　　　・見積レビュー
　　　　　　上司を含め第三者が入ってレビュー
　　　　　・デザインレビュー
　　　　　　機能仕様書など成果物のレビュー
　　　　　・ポスト・プロジェクトレビュー
　　　　　　プロジェクトが完了した時のレビュー
　　　　　会社内で標準化し、制度化しておく
　　　　　
　　　　　見積レビュー
　　　　　　必ず承認を受け、プロジェクトの資金を確保
　　　　　　
　　　　　　営業活動ポイント
　　　　　　　①お客様の予算見積に影響されないこと
　　　　　　　②システムの規模の見積は、システム開発本部やソフトウェア本部が決めるべき
　　　　　　　営業が決めるべきではない
　　（２）営業支援WBS
　　　　　作業項目と手順
　　　　　
　　　　　1.1　商談評価
　　　　　　1.1.1 顧客要求の明確化
　　　　　　1.1.2 受注、納入計画/戦略の明確化
　　　　　　1.1.3 外部リソースの作業明確化
　　　　　　1.1.4 商談レビュー実施
　　　　　1.2　ヒヤリング実施
　　　　　　1.2.2 プレゼン／デモ実施
　　　　　　1.2.2 提案依頼書の内容確認
　　　　　　　　　不明点や曖昧な点をヒヤリング
　　　　　　　　　スコープ（範囲）をとらえる
　　　　　　　　　営業と技術で分けて行う（重複して聞かないようにする）
　　　　　1.3　提案書作成・提出（提案書と見積書が成果物）
　　　　　　1.3.1 提供ソリューション明確化
　　　　　　1.3.2 主要マイルストーン設定
　　　　　　　　　・プロジェクトの開始時期
　　　　　　　　　・カットオフのタイミング
　　　　　　　　　・サービスインはいつなどを決定
　　　　　　1.3.3 組織編成
　　　　　　　　　プロジェクトマネージャ
　　　　　　　　　技術者
　　　　　　　　　外部の協力会社
　　　　　　1.3.4 提案書作成（概算費用のみ入れ）
　　　　　　1.3.5 見積書作成（提案書とは別作成）
　　　　　　1.3.6 提案内容の承認（社内レビュー）
　　（３）商談評価のポイント
　　　　　1.目的
　　　　　　新規商談の内容を把握し、自社の方針に合ったビジネスを判断する
　　　　　2.インプット/アウトプット
　　　　　　インプット：顧客よりの情報、および訪問により得た資料または情報収集
　　　　　　アウトプット：レビュー提案資料
　　　　　3.主な作業項目
　　　　　　－顧客要求の明確化
　　　　　　－受注、納入計画／戦略の明確化
　　　　　　－外部リソースの作業明確化
　　　　　　－商談レビュー実施
　　（４）ヒヤリングのポイント
　　　　1.目的
　　　　　顧客の導入理由、現状業務把握、課題に応えるシステム要件を明確化し、提案活動を行う承認を得る
　　　　2.インプット/アウトプット
　　　　　インプット：レビュー提案資料
　　　　　アウトプット：プロジェクト・レビュー資料
　　　　3.主な作業項目
　　　　　－プレゼン／デモ実施
　　　　　－RFP（提案依頼書）の内容確認
　　　　　　曖昧な点、不明な点を明確化
　　　　　　・顧客要求の整理
　　　　　　・システム要件を明確化
　　　　　　・プロジェクトのスコープ設定
　　　　　－プロジェクト・レビュー資料作成
　　　　　　技術レビュー
　　　　　　↓結果を技術
　　　　　　プロジェクト・レビュー
　　（５）顧客ヒヤリング例
　　　　・システム構築の目的と現状の課題
　　　　・顧客の要求事項と優先順位
　　　　・システム要件（性能、信頼性、運用、拡張性）
　　　　・システム化対象範囲と業務内容
　　　　・業務基盤の整備状況（仕様HW/SW、システム化レベル、業務の標準化）
　　　　・顧客体制について
　　　　・開発スケジュールと主要マイルストーン
　　　　・顧客には、業務内容の分析・検討時のための対応者はいるか、資料展示
　　　　・その他の要求事項はあるか

２章　提案活動の概要
　　　見積レビュー規定（必ず守るべき社内ルール、必ず作っておく）
　　　仕様を確定させる機能書や要件定義書のデザイン
　　　必ずチェックリストをつけてレビューする　など決めておく
　　　
　　　見積レビュー対象物：提案書、見積書
　　　
　　（１）提案活動概要フロー
　　　　営業、提案活動決定
　　　　↓
　　　　提案書・見積書作成（提案書、見積書、見積仕様書、提案・見積チェックリスト）
　　　　↓
　　　　提案書・見積レビュー（書類一式、技術/ビジネスレビュー）
　　　　↓
　　　　承認
　　　　↓
　　　　提案書・見積書提出
　　　　↓
　　　　提出後のフォロー
　　（２）提案書・見積作成
　　　　1.目的
　　　　　顧客のシステム要件に対応したソリューションを確定にし、システム導入の意思決定の指針となる提案を行う。
　　　　　
　　　　　提案書・見積書により、ベンダー決定を左右する
　　　　　ソリューションの内容を理解していない、提案依頼のレベルをはきちがえていると検討前に不採用
　　　　　
　　　　2.インプット／アウトプット
　　　　　インプット：RFP（提案依頼書）、プロジェクト・レビュー資料
　　　　　アウトプット：提案書、見積書
　　　　3.主な作業項目
　　　　　－提供ソリューション明確化（ビジネス、組織、導入戦略）
　　　　　－主要マイルストーン設定
　　　　　－組織編成（構築体制、サポート体制）
　　　　　－提案書作成
　　　　　－見積書作成
　　　　　－提案内容の承認
　　　　　－提案書・見積書提出
　　　　　－提出後のフォロー
　　　　　
　　　　　レビュー
　　　　　　①技術面のレビュー
　　　　　　　部門内で行うレビュー
　　　　　　②ビジネス面のレビュー（第三者が入って、実施）
　　　　　　　リスク、金額の妥当性、体制構築はできているかなど
　　　　　　　　プロジェクトの推進をビジネス面から検討
　　　　　　　　プロじぇくtpを、品質、コスト、納期、スコープ（開発範囲）
　　　　　　　　の４側面から検討
　　　　　
　　　　　必ず競合他社がいるので、提案書・見積書を提出したままにしないこと
　　　　　提案活動期間のフォローは重要
　　（３）提案書・見積レビュー規定（例）
　　　　1.目的
　　　　　顧客に提案書、見積書を提出するのに先立ち、提案・見積内容の妥当性をレビューする
　　　　　方法を規定することにより、プロジェクトのリスクを予測し、必要な対策を講じる
　　　　2.レビューー実施フォー
　　　　　レビュー実施に関する業務フローを示す。
　　　　3.レビュー実施
　　　　　プロジェクトマネージャは提案書・見積レビュー対象文書をもとに、プロジェクトの概要を説明し、参加者の質問に答える。レビューでは、「提案・見積チェックリスト」該当項目に対するプロジェクトの妥当性を判断する。同時に「提案書」と「積算シート」をもとにプロジェクト規模の妥当性を判断する。
　　　　　※第三者のコメント、対応方法など
　　　　4.提案書・見積レビュー報告書作成
　　　　　レビュー結果「提案書・見積ビレビュー報告書」に記入する。
　　　　　失敗例：「利益が２５％ない場合は承認しない」
　　　　　　　　粗利が、１０％程度しかでないことが判明
　　　　　　　原因：公式レビューがない　営業がレビュー承認を受けず受注
　　　　5.レビュー承認
　　　　　提案書・見積レビュー終了後、「提案書・見積レビュー報告書」の答申を受け、権限規定に定める承認基準に従い、速やかに承認を受ける。
　　　　　
３章　提案書作成のポイント
　　（１）未確定仕様対応　-仕様書内容の確認-
　　　　・システムの目的
　　　　・業務の内容、処理の流れ
　　　　　現状と改善後の状態を把握
　　　　・システム利用者の定義
　　　　　エンドユーザの明確化
　　　　・システム開発に関わる顧客の体制
　　　　　体制が組めるかどうか
　　　　・開発対象範囲、システムの実現機能
　　　　　プロジェクトのスコープ（開発範囲）
　　　　・入/出力の形式、酒類、データ量
　　　　　ファンクションポイント見積に最低限必要
　　　　　データ量が不明の場合どうするかが課題
　　　　　・インターネット系ビジネス
　　　　　・Web系アプリケーション構築
　　　　　（例）会社間のエレクトリック・コマース
　　　　　　数年後のデータ量など、予測するしかないので、
　　　　　　現場や部門の協力が不可欠
　　　　・要件（性能、運用、信頼性、拡張性）
　　　　　会社（業種）によって、こだわる点が異なる
　　　　・他システム/装置とのインタフェース条件
　　　　・システム機能の前提となる法律/業界標準の有無
　　　　・検収要件
　　　　・納期、開発スケジュール
　　　　　納期と主要マイルストーン
　　　　・開発条件（場所、テスト環境など）
　　　　
　　　　※RFPの有無にかかわらず、上記の内容が明確になっているかポイント
　　　　
　　（１）未確定仕様対応（続き）　-顧客体制の要因考慮-
　　　　・タイムリーな意思決定に問題がある
　　　　　ヒヤリングの際、キーマンが誰か必ず確認する
　　　　・プロジェクト管理/推進体制に問題がある
　　　　・担当者の知識に問題がある
　　　　・このシステムは顧客にとって新事業となる
　　　　・新生組織がかかわってくる可能性（前提）がある
　　　　・顧客側の決定は会議決定となる
　　　　　キーマンの力不足が原因
　　　　　混乱する可能性大（社団法人、財団法人、地方自治体などへの案件では要注意）
　　　　・プロジェクトのオーナーシップが不明確
　　　　　責任者は必ず聞いておく
　　　　　
　　（２）記述項目
　　　　1.はじめに
　　　　2.システム構築の目的
　　　　　顧客からヒヤリングした内容を記述
　　　　3.適用範囲
　　　　　ヒヤリングを通じて決めた内容を、提案依頼に基づいて記述
　　　　4.システム概要
　　　　　4.1全体構成
　　　　　4.2業務フロー
　　　　　4.3システム機能仕様
　　　　　ない場合ヒヤリング
　　　　5.ソフトウェア構成
　　　　　5.1基本ソフトウェア
　　　　　5.2アプリケーション・ソフトウェア
　　　　6.ハードウェア構成
　　　　　ハードウェアの構成から
　　　　7.開発日程
　　　　　提案するハードウェア、ソフトウェアを実現するためのスケジュール
　　　　8.開発体制
　　　　9.概算費用
　　　　　総コスト、ハードウェアコストなどを記述
　　　　10.添付資料
　　　　　ハードウェア参考資料、パッケージの概要など
　　　　　ツール類は添付資料で説明
　　　　　実績があれば添付
　　（３）提案書作成チェックリスト（例）
　　　　□顧客要件として問題点が明確化されているか
　　　　□顧客にとってシステムの必要性は明確か
　　　　□本システム導入による大きな変化が明確か
　　　　□業界動向と本システム化思想がマッチしているか
　　　　□現行業務と新システムの差異を解説しているか
　　　　□開発対象範囲が明確にされているか
　　　　□顧客も含めた役割と責任範囲が明確か
　　　　□システム全体をわかりやすい解説されているか
　　　　□各サブシステム単位の機能説明が解説されているか
　　　　□出来る限り具体的な原因など解説されているか
　　　　□運用体制との整合性は確認してあるか
　　　　□より具体的な表現となっているか
　　　　□関連システムとの整合性ととれているか
　　　　□システム導入（移行）の手順が明確になっているか
　　　　□開発スケジュール、納期が明確か
　　　　□顧客の本番開始日が明確にされているか
　　　　□開発工程やシステムテスト、移行作業など日程に整合性があるか
　　　　□開発の責任体制が明確にされているか
　　　　□質や量の効果は、図表で具体的で分かりやすいか
　　　　
　　　　※提案書はチェックリストを見て作成
４章　見積作成のポイント
　　（１）見積上の問題点と対応
　　　　1.LOCの限界←ITぎじゅつの大幅な変化への対応が問題
　　　　　→「機能量」によるメトリクスの確立
　　　　　LOC:生産性を加味して、ステップ数を人月、工数に換算
　　　　2.流動的な作業の増加
　　　　　→プロセスの確立とリスクの回避
　　　　3.古いデータが役に立たない
　　　　　→経験則と実績値の収集
　　　　　アプリケーション規模毎のデータをベースにする
　　　　　フェーズ別に実績値を収集する
　　　　4.システム規模・難易度の過小評価
　　　　　→アプリケーションに精通したSEの支援
　　　　　業務アプリケーション見積未経験者の学び方
　　　　　顧客とのやりとりを通じてまず言葉から覚えていく
　　　　5.見積範囲・対象の不明確さ
　　　　　→顧客ヒヤリングによる見積範囲・条件の明確化
　　（２）見積作成のポイント
　　　　1.見積条件の設定
　　　　　・共通前提条件（PKG導入の場合はカスタマイズ条件、導入先、ユーザ数など）
　　　　　・顧客との責任分担
　　　　2.工数見積
　　　　　・開発フェーズ毎に見積る
　　　　　・フェーズに依存しない作業（管理）は、以下の目安で見積る。
　　　　　　例：プロジェクト管理：７％以上
　　　　　　　外部資源管理（協力会社管理など）：外注総工数の４％以上
　　　　　　　仕様変更対応：４％以上
　　　　　　　＜アメリカの例＞
　　　　　　　プロジェクトマネジメントの工数：業界平均８～１３％
　　　　3.価格見積
　　　　　・社内人件費はクラス別単価を適用
　　　　　・PKGライセンス、HW/購入ソフト、とレニンぐ費用（参考）、保守費用（ン港）
　　　　　・適正マージンをキープできるようにする
　　　　4.提案内容の承認
　　　　　・提案内容（提案書・見積書）についてレビューを行い、承認を得る
　　　　
　　　　各フェーズ定義と主な成果物（例）
　　　　 開発フェーズ　　　　アクティビティ　　　　主な成果物
　　　　１．分析　　　　　　　要件定義　　　　　　　○要求仕様書
　　　　　　　　　　　　　　　開発計画　　　　　　　○機能仕様書
　　　　　　　　　　　　　　　機能仕様書作成　　　　○プロジェクト計画書
　　　　２．システム設計　　　設計書作成　　　　　　○システム基本設計書
　　　　　　　　　　　　　　　テスト計画作成　　　　○システム詳細設計書
　　　　３．開発　　　　　　　プログラム設計　　　　○プログラム設計
　　　　　　　　　　　　　　　プログラム制作　　　　○操作説明書
　　　　　　　　　　　　　　　システムテスト　　　　○運用説明書
　　　　　　　　　　　　　　　マニュアル作成　　　　○テスト報告書
　　　　４．導入　　　　　　　納入/設置　　　　　　○完成システム
　　　　　　　　　　　　　　　システムテスト導入支援	
　　　　５．運用　　　　　　　システム運用支援　　　○ポスト。プロジェクト・レビュー報告書
　　　　　　　　　　　　　　　保証サポート
　　　　※成果物を作るための作業をブレイクダウンして見積る
　　（３）リスク対応
　　　　　規模を見積ったもの　→　原工数
　　　　　リスクはあらかじめ見積もった原工数に加味していく
　　　　 ・リスクチェックリストにより、リスクの特定を行う
　　　　 ・リスクの発生確率（発生の確かさ）と影響度（発生時の影響度合い）を基に、コストに対する評価を行う
　　　　 PMBOK：プロジェクトマネジメントの標準体系
　　　　 　　　　最初に、定性リスク分析を行い、影響度を求める
　　　　 主要なリスク　　　　　　　　　　発生確率　　影響度　　リスク点数　　評価
　　　　 仕様決定のずれ込み　　　　　　　　0.1　　　　0.2　　　　0.02　　　　　小
　　　　 適用範囲・機能の拡大　　　　　　　0.5　　　　0.8　　　　0.4　　　　　大
　　　　 開発アプリの納期遅延　　　　　　　0.3　　　　0.4　　　　0.12　　　　　中
　　　　 
　　　　 リスク点数をコストに反映していく仕組みを用意しておく
　　（４）見積における技法の位置付け
　　　　要求仕様→開発規模の見積→工数見積→コスト
　　　　
　　　　開発規模の見積：LOC、FP法、命令語の数、オブジェクトポイント法
　　　　　　　　　　　　画面・帳票数、データ項目数、他
　　　　　　　　　　　　規模から見て、工数に変換し、生産性で割って求める
　　　　　　　　　　　　ファンクションポイント算出：開発期間、言語ごとに算出
　　　　工数見積：類推見積（類似プロジェクトの実績から見積る）
　　　　　　　　　係数モデル見積（ファンクションポイント）
　　　　　　　　　ボトムアップ見積（経験とノウホウをベースに積み上げていく方式）
　　（５）各段階の見積
　　　　・初期見積（超概算見積）
　　　　　－受注側主導で提案する際のコスト試算
　　　　　－予算確保のための見積
　　　　　　規模見積は過去の事例から類推、（画面数＋帳票数）x定数
　　　　・概算見積（機能仕様書の段階や提案依頼書に対する見積）
　　　　　－引合（外部設計前）段階での見積
　　　　　－RFPに対する見積
　　　　　　規模見積はーSPR法（機能の重みづけを計測事例の期待値により簡略化）
　　　　・詳細見積（基本設計終了、外部設計完了段階の見積）
　　　　　－外部設計終了段階での見積
　　　　　－段階的見積での下流工程の見積
　　　　　　規模見積はーIFPUG法（機能を洗い出し、それぞれの複雑さを評価）
　　　　　　IFPUG法：インターナショナル・ファンクションポイント・ユーザーグループ法
　　　　　
　　　　初期見積
　　　　　・類推見積　例：（画面数＋帳票数）X定数
　　　　　・係数モデル見積　例：Early　FP法
　　　　　・ポトムアップ見積
　　　　概算見積
　　　　　・係数モデル見積　例：SPR法
　　　　　・ポトムアップ見積
　　　　
　　　　コストドライブ要因が多岐に渡り、作業工程も不明確なことなら、開発規模見積が難しい
　　　　
　　　　詳細見積
　　　　　・係数モデル見積　例：IFPUG法
　　　　　・ポトムアップ見積
　　　　
　　　　機能が明確
　　　　
　　（６）工数見積方法比較
　　　　　
　　（７）概算見積例（外部設計以降）－１
　　　　IBM方式の概算見積事例
　　　　1.諸数値の集計（データ項目数、画面数、帳票数、プロセス数）
　　　　2.ステップ数（予測値）を計算
　　　　　予測ステップ数A = データ項目当たりステップ数 * データ項目数
　　　　　予測ステップ数B = 
　　　　　　　　　（難易度高の１画面当たりステップ数 * 難易度高の画面数） + 
　　　　　　　　　（難易度高の１帳票当たりステップ数 * 難易度高の帳票数） + 
　　　　　　　　　（難易度中の１画面当たりステップ数 * 難易度中の画面数） + 
　　　　　　　　　（難易度中の１帳票当たりステップ数 * 難易度中の帳票数） + 
　　　　　　　　　（難易度低の１画面当たりステップ数 * 難易度低の画面数） + 
　　　　　　　　　（難易度低の１帳票当たりステップ数 * 難易度低の帳票数） 
　　　　　指標値例：
　　　　　　　１データ当たりステップ数：150（一律）
　　　　　　　１画面当たりステップ数：2000(難易度高の場合)
　　　　　　　１画面当たりステップ数：1500(難易度中の場合)
　　　　　　　１画面当たりステップ数：1000(難易度低の場合)
　　　　3.生産性指標（作業可能なステップ/人月）を使用して工数を見積る
　　　　　　開発規模A　=
　　　　　　　　　予測ステップ数／外部設計開発生産性
　　　　　　　　　予測ステップ数／内部設計開発生産性
　　　　　　　　　予測ステップ数／開発設計開発生産性
　　　　　　　　　予測ステップ数／総合試験開発生産性
　　　　　　指標値例：工程毎の開あh津生産性（オンライン）
　　　　　　　　外部設計：1700
　　　　　　　　内部設計：1300
　　　　　　　　開発実施： 700
　　　　　　　　結合試験：2500
　　　　　　　　総合試験：5000
　　　　　　　　
５章　ファンクションポイント（FP）法の概要
　　ファンクションポイント法
　　・システムの機能規模、ソフトウェアの希望を計測
　　・実績の評価、生産性を評価する尺度
　　目的
　　　「お客様、またはエンドユーザ要求したものを計測する」
　　　「インプリメントに用いた技術と無関係に計測する」
　　　「ファンクションポイント当たりのバグ数や生産性の解析など品質の開設に役に立つ測定基準を提供する」
　　　「ソフトウェアの見積の手段を提供する」
　　主なFP法
　　　１９８４年　IBM法改訂版
　　　１９８５年　SPR法
　　　１９８６年　IFPUG法
　　　　　　日本　JFPUG：IFPUGの日本支部
　　（１）ファンクションポイントの算出手順
　　　　ファンクションポイントの数　＝　ソフトウェアの規模を定量化したもの
　　　　1.FP算出境界の決定（バウンダリー）
　　　　　対象アプリケーション範囲を明確にし、ユーザの世界、算出対象のアプリケーション、
　　　　　対象外のアプリケーション三者の境界を決定
　　　　2.未調整FP算出（五つの機能要素から抽出）
　　　　　算出対象のアプリケーションの機能要素を抽出し、その複雑度を個々に評価して算出
　　　　3.調整係数の算出
　　　　　アプリケーションがユーザに提供する一般的な機能の複雑度を評価する
　　　　4.最終FP算出
　　（２）５つのファンクションの抽出
　　　　・データのまとまりに着目したもの（データファンクション）
　　　　・データの出入りに着目したもの（トランザクションファンクション））
　　（３）ファンクション評価（１）
　　　　■内部論理ファイル
　　　　■外部インターフェースファイル
　　　　■外部入力
　　　　■外部出力
　　　　■外部照会
　　　　
　　　　FP法における５つのファンクションのカウント基準（１）
　　　　FP法：カウントの仕方の違いで、規模が大きく振れてしまう
　　　　
　　　　■内部論理ファイル
　　　　　カウント基準
　　　　　　アプリケーションの境界で制御情報やユーザ・データの主要な論理的グループ各を１論理ふぁいると数える
　　　　　　
　　　　　例：
　　　　　　・データベース：ビューやアクセス・パス毎に一つ
　　　　　　・マスタファイル：一群のキー毎に一つ
　　　　　　・システム/他ファイルによって必要とされたり、一時的でない内部論理ファイル
　　　　　　・データに対するユーザ管理テーブル（税率、出荷散る、メッセージ/状態など）
　　　　　　・ユーザの照会ファイル
　　　　■外部インターフェースファイル
　　　　　カウント基準
　　　　　　・アプリケーション間で共有するファイルの場合、両方で使用されるなら、各のアプリケーションで
　　　　　　　内部論理ファイルと外部インターフェースファイル両方に数えられる。
　　　　　　・そうでなければ、本当にそのファイルで作業/保守/使用するアプリケーションがファイルとして数える。
　　　　　　　１）AがBからファイルを受け取る：Ahaインターフェースを１つ、Bはファイルを１つと数える
　　　　　　　２）AがBとファイルを共有する：AとBともにファイル１つとインターフェース１つと数える
　　　　　　　３）AがBにファイルを送る：Aはファイルを１つ、Bはインターフェースを１つと数える
　　　　　　　
　　　　　例：
　　　　　　・他アプリケーションから参照可能な内部論理ファイル
　　　　　　・共有データベース
　　　　　　・共有パラメータ・リスト
　　　　■外部入力
　　　　　カウント基準
　　　　　　・異なる論理処理の入力をすべて数える
　　　　　　・異なるフォーマットの入力を全て数える
　　　　　　・ユーザに認可され使用されるもののみ数える（仕様書ないものは数えない）
　　　　　　
　　　　　例：
　　　　　　・端末上での画面入力
　　　　　　・トランザクション
　　　　　　・他アプリケーションから受け取るトランザクション・ファイル
　　　　■外部出力
　　　　　カウント基準
　　　　　　・異なる論理処理の出力をすべて数える
　　　　　　・異なるフォーマットの出力を全て数える
　　　　　　・ユーザに認可され使用されるもののみ数える
　　　　　
　　　　　例：
　　　　　　・端末上で画面出力
　　　　　　・帳票
　　　　　　・他アプリケーション送るトランザクション・ファイル
　　　　　
　　　　■外部照会
　　　　　カウント基準
　　　　　　・入力または出力のどちらか異なる論理処理の照会を全て数える
　　　　　　・入力または出力のどちらかで異なるフォーマットの照会を全て数える
　　　　　　・ユーザに人かされ使用されるもののみ数える
　　　　　　
　　　　　例：
　　　　　　・ファイルや他の論理的な実体を更新しないユーザ照会/表示
　　　　　　・選択メニュー画面
　　　　　　・ヘルプ画面やメッセージ
　　（５）調整係数の算出
　　　　未調整FP：調整係数を算出して、調整し、最終FPを求める
　　　　システム特性項目
　　　　1.データ通信
　　　　　データ、制御情報などを通信により送受信しているか？
　　　　2.分散データ処理
　　　　　分散処理をしているか？
　　　　3.パフォーマンス
　　　　　レスポンスやスループットに対する性能目標の影響はあるか？
　　　　4.ハードウェア資源の制約
　　　　　システム運用として過度な要求がなされていないか？
　　　　5.トランザクション率
　　　　　トランザクション量はどうか？
　　　　6.オンラインデータ入力
　　　　　オンラインデータ入力方法が用意されているか？
　　　　7.エンドユーザの使い勝手にの配慮
　　　　　エンドユーザに対するオンライン機能は充実しているか？
　　　　8.即時更新
　　　　　論理内部ファイルのためにオンライン更新機能を用意しているか？
　　　　9.処理の複雑さ
　　　　　処理の複雑性はどうか？
　　　　10.コードの再利用性
　　　　　流用性（再利用性）を考慮して開発するか？
　　　　11.導入のしやすさ
　　　　　コンパージョンやインストールのしやすさを考慮しているか？
　　　　12.運用のしやすさ
　　　　　オペレーションのしやすさを考慮しているか？
　　　　12複数サイトへの導入
　　　　　複数箇所での資料を考慮して開発するか？
　　　　14.変更のしやすさ
　　　　　システム改造を考慮して開発するか？
　　　　　
　　　　14項目の評価項目（一般システム特性）により測定対象の特性を評価する。
　　　　各項目は０～５点の６段階で評価される
　　　　　調整係数＝評価値合計　X　0.01 + 0.65
　　　　　※調整係数は0.65～1.35の範囲となる
　　（６）最終FP算出
　　　　　1.最終FP（調整済FP）の算出
　　　　　　最終FP　＝　未調整FP X 調整係数
　　　　　　※最終FPがソフトウェアの規模を表す
　　　　　　
　　　　　2.工数見積
　　　　　　最終FPより工数を見積もる。
　　　　　　FP当たりの工数は組織、経験、使用言語や手法により異なる
　　　　　　例：経験のある要員、非構造化手法、通常ツール、高水準言語の場合
　　　　　　　１人月あたりのFP数は「１０」
　　　　　　　工数=最終FP/10 = XX 人月
　　　　　　　※算出工数は全工程を含む
　　　　　
　　　　　言語レベルと生産性の関係
　　　　　　言語レベル　　　　　平均生産性（FP/人月）
　　　　　　１－３　　　　　　　　５～１０
　　　　　　４－８　　　　　　　　１０～２０
　　　　　　９－１５　　　　　　　１６～２３
　　　　　　１６－２３　　　　　　１５～３０
　　　　　　２４－５５　　　　　　３０～５５
　　　　　　５５以上　　　　　　　４０～１００
　　（７）FPの問題
　　　　　・早い段階で詳細がわからない
　　　　　・手間がかかる
　　　　　早期見積手法
　　　　　○NESMAの概算法
　　　　　　データファンクションの複雑度　単純
　　　　　　トランザクションファイルの複雑度　普通
　　　　　　と固定
　　　　　○SPRファンクションポイント法
　　　　　　５つのファンクションを全て「複雑度＝普通」で計算
　　　　　　単純、複雑、普通を検討する必要のない簡易型ファンクションポイント法
　　（８）見積方法の実態
　　　　FP法の利用
　　　　早期見積段階、ファイル数や項目数がわからない早い段階では難しい
６章　SPRファンクションポイント法による算出
　　（１）算出手順
　　　1.アプリケーションの複雑さを評価し、補正係数を求める
　　　2.個々の要因（入力、出力、照会、データファイル、インタフェース）を求め
　　　 補正前FPを計算する
　　　3.求められた補正前FPに、補正係数を使用して最終的なFPを求める
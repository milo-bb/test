
1.sarコマンドでCPU使用率最大値とメモリ使用量の最大値確認
 ■情報収集
 sar -o sar_`date "+%Y%m%d%H%M%S"`.dat 1
 ※1秒間情報を取得する
 ■CPU最大値確認
 sar -u -f datファイル | awk '{if(m<$3) m=$3} END{print m}' | awk '{printf("CPU使用率最大値：%3.2f%\n"),$1}'
 ■メモリ最大値確認
 sar -r -f datファイル | awk '{sum=$3-($5+$6)} END{print sum}' | awk '{if(m<$1) {m=$1}} END {print m}' | awk '{print $1/1024/1024}' | awk '{printf("メモリ使用量最大値：%3.1fG\n",$1)}'

2.シェルで進捗バー作成
 #!/bin/bash
 b=''
 i=0
 while [ $i -le 100 ]
 do
  printf "progress:[%-50s]%d%%\r" $b $i
  sleep 0.1
  i=`expr 2 + $i`
  b=-$b
 done
 
 #!/bin/bash
 chars="／―＼|";
 i=0
 j=0
 while [ $i -le 40 ]
 do
    sleep 0.1
    if test $j -gt 3; then
       j=0
    fi
    echo -en "Loading...${chars:$j:1}" "\r"
    j=$((j+1))
    i=$((i+1))
 done

3.postgresql正規表現
  半角以外の場合
  カラム名 ~* [^ -~]
  regexp_replace(カラム名,'([^　])([^　])',E'●\\1','g')
  半角の場合
  regexp_replace(カラム名,'([^ ])([^ ])',E'*\\1','g')
  数字
  translate(カラム名,'0123456789','0362851974')
  メールアドレス
  regexp_replace(カラム名,'[^@.]','*','g') 
  奇数と偶数を入れ替えて奇数文字をマスク
  regexp_replace(カラム名,'(.).','●\\1','g')
  regexp_replace(カラム名,'([^　])([^　])','●\\1','g')
  偶数文字をマスクする場合
  regexp_replace(カラム目,'(.).','\\1●','g')
  奇数文字をマスクする場合
  regexp_replace(カラム名,'.(.)','●\\1','g')
  文字数分マスクする場合
  regexp_replace(カラム名,'.','●','g')
  regexp_replace(カラム名,'[^　]','●','g')
  空文字以外の場合変換する
  regexp_replace(カラム名,'[^""].*','XXXXXX')

4.Linuxで文字コード変換
  nkfコマンド
  sijs、crlfに変換する時
  nkf -sx -Lw --overwrite ファイル名
  utf-8、lfに変換する時
  nkf --ic=CP932 --oc=UTF-8 -Lu --overwrite ファイル名
  
5.linux ファイル作る時に、ファイル名を時間をつけたい場合
  後ろに_`date +"%Y%m%d%H%M%S"`をつける

6.Postgre何月差計算
  SELECT (DATE_PART('year', '2012-01-01'::date) - DATE_PART('year', '2011-10-02'::date)) * 12 + (DATE_PART('month', '2012-01-01'::date) - DATE_PART('month', '2011-10-02'::date));
